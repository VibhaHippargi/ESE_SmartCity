int A = 10;
   int B=20;
int current_state=0;
//int i;

 

enum class State
    {
        driving_normal=1,
        decelerating,
        changed_path

    };
long readUltrasonicDistance(int triggerPin, int echoPin)
{
  pinMode(triggerPin, OUTPUT);  // Clear the trigger
  digitalWrite(triggerPin, LOW);
  delayMicroseconds(2);
  // Sets the trigger pin to HIGH state for 10 microseconds
  digitalWrite(triggerPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(triggerPin, LOW);
  pinMode(echoPin, INPUT);
  // Reads the echo pin, and returns the sound wave travel time in microseconds
  return pulseIn(echoPin, HIGH);
}
void setup()
{   Serial.begin(1000);
    //Serial.println("O Arduino foi iniciado!");
    pinMode(3, OUTPUT);
    pinMode(4, OUTPUT);
    pinMode(5, OUTPUT);
}
void loop()
{ 
  for (int i = 0; i <2; i++)
   {
    switch(current_state)
    {
      case 0:
      digitalWrite(4, LOW);
      digitalWrite(5, LOW);
      digitalWrite(8, LOW); //G LOW
      digitalWrite(3, HIGH); 
      digitalWrite(2, HIGH); //R
      //digitalWrite(3,LOW);
      Serial.println("DRIVING NORMAL");
      if (0.01723 * readUltrasonicDistance(9, 9) < 50)
      {
         /*digitalWrite(LED_BUILTIN, HIGH);
         delay(1000); // Wait for 1000 millisecond(s)
         digitalWrite(LED_BUILTIN, LOW);
          delay(1000); // Wait for 1000 millisecond(s)*/
      current_state=1;
      }
      delay(2000);
      break;

      case 1: 
      digitalWrite(3, LOW);
      digitalWrite(2, LOW); // R LOW
      digitalWrite(4, HIGH);
      digitalWrite(6, HIGH); //B
      Serial.println("DECELERATING");
      current_state=2;
       delay(2000);
      break;

      case 2: 
      digitalWrite(3, LOW);
      digitalWrite(4, LOW);
       digitalWrite(6, LOW); //B LOW
      digitalWrite(5, HIGH);
      digitalWrite(8, HIGH); //G
      Serial.println("CHANGING PATH");
      current_state=0;
       delay(2000);
      break;

      default: digitalWrite(5, HIGH);
      digitalWrite(3, LOW);
      digitalWrite(4, LOW);
      break;
    }

    }
  delay(1000);  
}